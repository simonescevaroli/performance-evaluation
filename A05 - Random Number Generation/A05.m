clear;
m = 2^32;
a = 1664525;
c = 1013904223;
seed = 521191478;
N = 10000;
rand_nums = zeros(N,1);
rand_nums(1,1) = seed;
%Linear Congruent Generator
for i = 2:N
    rand_nums(i,1) = mod(a*rand_nums(i-1,1)+c,m);
end
rand_nums(:,1) = rand_nums(:,1)/m;
x = 0:0.1:25;
sDS = sort(rand_nums);
%Mean 
M1 = mean(sDS);
%Second moment
M2 = sum(sDS.^2)/N;
%Third moment
M3 = sum(sDS.^3)/N;
%Sigma
Sigma = std(sDS);
%CV
cv = Sigma/M1;


%plot(sort(rand_nums), (1:N)/N, "-");

%Exponential distribution
N1 = 10000;
l_exp = 0.1;
X1 = -log(rand_nums(1:N1,1))/l_exp;
Exponential_cdf = max(0, 1 -  exp(-l_exp*x));
%Plot
figure;
plot(sort(X1), (1:N1)/N1, "-", x, Exponential_cdf, "-");
legend("Empirical", "Real", "Location", "southeast");
title("Exponential distribution");
xlim([0 25]);

%Pareto distribution
N2 = 10000;
alpha_pareto = 1.5;
m_pareto = 5;
X2 = m_pareto./nthroot(rand_nums(1:N2,1), alpha_pareto);
Pareto_cdf = (x>=m_pareto).*(1-(m_pareto./x).^alpha_pareto);
%Plot
figure;
plot(sort(X2), (1:N2)/N2, "-", x, Pareto_cdf);
legend("Empirical", "Real", "Location", "southeast");
title("Pareto distribution");
xlim([0 25]);

%Erlang distribution
N3 = 2500;
k_erlang = 4;
l_erlang = 0.4;
k = 1;
j = 1;
arr_erl = zeros(N3, k_erlang);
for i = 1:N
    arr_erl(k, j) = rand_nums(i,1);
    j = j + 1;
    if j==k_erlang+1
        j = 1;
        k = k +1;
    end
end
numerator_erl = log(prod(arr_erl,2));
X3 = -numerator_erl/l_erlang;
acc = 0;
for j = 0:k_erlang-1
    acc = acc + (1/factorial(j)).*exp(-l_erlang.*x).*(l_erlang.*x).^j;
end
Erlang_cdf = 1 - acc;

%Plot
figure;
plot(sort(X3), (1:N3)/N3, "-", x, Erlang_cdf, "-");
legend("Empirical", "Real", "Location", "southeast");
title("Erlang distribution");
xlim([0 25]);


%Hypo-Exponential distribution
N4 = 5000;
l1_hypo = 0.5;
l2_hypo = 0.125;
X4 = zeros(N4, 1);
j = 1;
for i=1:2:N-1
    X4(j,1) = -log(rand_nums(i, 1))/l1_hypo -log(rand_nums(i+1, 1))/l2_hypo;
    j = j+1;
end
Hypoexp_cdf = 1 - ((l2_hypo*exp(-l1_hypo.*x))/(l2_hypo-l1_hypo)) + ((l1_hypo*exp(-l2_hypo.*x))/(l2_hypo-l1_hypo));
%Plot
figure;
plot(sort(X4), (1:N4)/N4, "-", x, Hypoexp_cdf, "-");
legend("Empirical", "Real", "Location", "southeast");
title("Hypo-Exponential distribution");
xlim([0 25]);



%Hyper-Exponential distribution
N5 = 5000;
l1_hyper = 0.5;
l2_hyper = 0.05;
p1_hyper = 0.55;

X5 = zeros(N5, 1);
o = 1;
%Raggruppo di 2 in 2
for i = 1:2:N-1
    X5(o, 1) = (rand_nums(i,1)<=p1_hyper).*(-log(rand_nums(i+1,1))/l1_hyper) + (rand_nums(i,1)>p1_hyper).*(-log(rand_nums(i+1,1))/l2_hyper);
    o = o + 1;
end
%Raggruppo di 5k in 5k
%{
arr_hyper = [rand_nums(1:N5) rand_nums(N5+1:2*N5)];
X5(:,1) = (arr_hyper(:,1)<=p1_hyper).*(-log(arr_hyper(:,2))/l1_hyper) + (arr_hyper(:,1)>p1_hyper).*(-log(arr_hyper(:,2))/l2_hyper);
%}
%Cv < 1, so hyper_exp would not be possible
Hyperexp_cdf = 1 - (p1_hyper * exp(-l1_hyper.*x)) - (1-p1_hyper) * exp(-l2_hyper.*x);
%Plot
figure;
plot(sort(X5), (1:N5)/N5, "-", x, Hyperexp_cdf, "-");
legend("Empirical", "Real");
title("Hyper-Exponential distribution");
xlim([0 25]);



%Compute costs
cost1 = sum(X1 .* (X1 <= 10) * 0.01 + X1 .* (X1 > 10) * 0.02);
cost2 = sum(X2 .* (X2 <= 10) * 0.01 + X2 .* (X2 > 10) * 0.02);
cost3 = sum(X3 .* (X3 <= 10) * 0.01 + X3 .* (X3 > 10) * 0.02);
cost4 = sum(X4 .* (X4 <= 10) * 0.01 + X4 .* (X4 > 10) * 0.02);
cost5 = sum(X5 .* (X5 <= 10) * 0.01 + X5 .* (X5 > 10) * 0.02);

fprintf("First sample generated by linear congruent generator: %g\n", rand_nums(1,1));
fprintf("Second sample generated by linear congruent generator: %g\n", rand_nums(2,1));
fprintf("Third sample generated by linear congruent generator: %g\n", rand_nums(3,1));
fprintf("Cost for Exponential: %g$\n", cost1);
fprintf("Cost for Pareto: %g$\n", cost2);
fprintf("Cost for Erlang: %g$\n", cost3);
fprintf("Cost for Hypo-Exponential: %g$\n", cost4);
fprintf("Cost for Hyper-Exponential: %g$\n", cost5);
